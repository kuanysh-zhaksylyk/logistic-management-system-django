name: Django CI/CD with GHCR and Nginx auto-restart

on:
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}:latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: GS Commit Message Checker
      # You may pin to the exact commit or the version.
      # uses: GsActions/commit-message-checker@9d8708beab99f811c5fe3a4f98acc4b2f2ba8496
      if: ${{ github.event_name != 'workflow_dispatch' }}
      uses: GsActions/commit-message-checker@v1
      with:
        # A regex pattern to check if a commit message is valid.
        pattern: "((feat|fix|docs|style|refactor|test|build|ci|perf)+(\\([a-z]+(.)+\\))?\\: [a-z]+(.)+)|(Review fixes(.)*)|(Merge pull request(.)*)|(Revert(.)*)"
        # Expression flags change how the expression is interpreted.
        flags: # optional, default is gm
        # A error message which will be returned in case of an error.
        error: "One of commit messages has an incorrect title. Please read the documentation: docs/dev/pr.md"
        # Setting this input to true will exclude the Pull Request title from the check.
        excludeTitle: true # optional, default is false
        # Setting this input to true will exclude the Pull Request description from the check.
        excludeDescription: true # optional, default is false
        # Setting this input to true will check all Pull Request commits
        checkAllCommitMessages: true # optional, default is false
        # you must provide GITHUB_TOKEN to this input if checkAllCommitMessages is true
        accessToken: ${{ secrets.GITHUB_TOKEN }} # optional, default is false

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        python src/manage.py test

    - name: Login to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build Docker image
      run: docker build -t $IMAGE_NAME .

    - name: Push Docker image to GitHub Packages
      run: docker push $IMAGE_NAME

    # - name: Deploy on Remote Server via SSH
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.SERVER_HOST }}
    #     username: ${{ secrets.SERVER_USER }}
    #     key: ${{ secrets.SERVER_SSH_KEY }}
    #     script: |
    #       cd /home/${{ secrets.SERVER_USER }}/django_final_project

    #       echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    #       sed -i 's|image: .*|image: '"$IMAGE_NAME"'|' docker-compose.yaml

    #       docker-compose pull
    #       docker-compose down
    #       docker-compose up -d --build

    #       docker-compose exec web python src/manage.py migrate
    #       docker-compose exec web python src/manage.py collectstatic --noinput

    #       docker-compose restart nginx
